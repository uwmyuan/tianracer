<?xml version="1.0" encoding="utf-8"?>
<robot name="tianracer" xmlns:xacro="http://www.ros.org/wiki/xacro">  
  <gazebo reference="chassis">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="left_steering_hinge">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="left_rear_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="right_steering_hinge">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="right_rear_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="left_front_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="right_front_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp  value="10000000.0" />
    <kd  value="1.0" />
    <fdir1 value="0 0 1"/>
    <material>Gazebo/Red</material>
  </gazebo> 

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/tianracer</robotNamespace>
      <robotParam>robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <gazebo>
      <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <jointName>left_rear_wheel_joint, right_rear_wheel_joint, left_steering_hinge_joint, right_steering_hinge_joint, right_front_wheel_joint,left_ front_wheel_joint</jointName>
        <updateRate>50.0</updateRate>
        <robotNamespace>/tianracer</robotNamespace>
        <alwaysOn>true</alwaysOn>
      </plugin>
  </gazebo> 

  <!-- hokuyo -->
  <xacro:unless value="$(optenv DISABLE_GAZEBO_LASER false)">
    <gazebo reference="lidar">
      <material>Gazebo/Grey</material>
      <sensor type="ray" name="hokuyo_sensor">
        <pose>0 0 0.0124 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1081</samples>
              <resolution>1</resolution>
              <min_angle>-2.3561944902</min_angle>
              <max_angle>2.3561944902</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>10.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName>
          <frameName>lidar</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:unless> 

  <!-- camera -->
  <gazebo reference="camera">
    <material>Gazebo/Grey</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>tianracer/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="real_sense">
    <sensor type="depth" name="real_sense">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
            <horizontal_fov>${60.0*3.14/180.0}</horizontal_fov>
            <image>
                <format>R8G8B8</format>
                <width>640</width>
                <height>480</height>
            </image>
            <clip>
                <near>0.05</near>
                <far>8.0</far>
            </clip>
        </camera>
        <plugin name="kinect_real_sense_controller" filename="libgazebo_ros_openni_kinect.so">
            <cameraName>tianracer/real_sense</cameraName>
            <alwaysOn>true</alwaysOn>
            <updateRate>10</updateRate>
            <imageTopicName>rgb/image_raw</imageTopicName>
            <depthImageTopicName>depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>depth/points</pointCloudTopicName>
            <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
            <frameName>real_sense</frameName>
            <baseline>0.1</baseline>
            <distortion_k1>0.0</distortion_k1>
            <distortion_k2>0.0</distortion_k2>
            <distortion_k3>0.0</distortion_k3>
            <distortion_t1>0.0</distortion_t1>
            <distortion_t2>0.0</distortion_t2>
            <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
    </sensor>
  </gazebo>
</robot>